import streamlit as st
import yfinance as yf
import pandas as pd
import plotly.graph_objects as go
from datetime import date, timedelta

st.set_page_config(page_title="‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏∏‡πâ‡∏ô ‚Ä¢ Stock Prices", page_icon="üìä", layout="wide")

st.markdown("## üìä ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏∏‡πâ‡∏ô ‚Äî Stock Prices")
st.caption("Real-time (near) quotes & historical charts via Yahoo Finance")

# ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏∏‡πâ‡∏ô (‡∏£‡∏ß‡∏°‡πÑ‡∏ó‡∏¢/‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®)
preset = [
    "AAPL", "MSFT", "GOOGL", "TSLA", "NVDA",
    "PTT.BK", "CPALL.BK", "ADVANC.BK", "KBANK.BK", "SCC.BK",
    "^SET", "^GSPC", "^IXIC"
]

c1, c2, c3 = st.columns([3,2,2])
with c1:
    ticker = st.text_input("‡πÉ‡∏™‡πà‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏´‡∏∏‡πâ‡∏ô / Enter Ticker", value="AAPL", help="‡πÄ‡∏ä‡πà‡∏ô AAPL, TSLA, PTT.BK, ^SET")
with c2:
    pick = st.selectbox("‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ / Or choose preset", preset, index=0)
with c3:
    if st.button("‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å / Use Preset"):
        ticker = pick

# ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô-‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î
d1, d2 = st.columns(2)
with d1:
    start = st.date_input("‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô / Start", value=date.today() - timedelta(days=180))
with d2:
    end = st.date_input("‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î / End", value=date.today())

if not ticker:
    st.warning("‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏™‡πà‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏´‡∏∏‡πâ‡∏ô (e.g., AAPL, PTT.BK)")
    st.stop()

t = yf.Ticker(ticker)

# -------- ‡∏õ‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå) --------
with st.container():
    qcol1, qcol2, qcol3, qcol4 = st.columns(4)
    hist_today = t.history(period="1d")
    if hist_today.empty:
        st.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏ô‡∏µ‡πâ ‡∏•‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á / No data returned for this ticker.")
    else:
        last_close = float(hist_today["Close"].iloc[-1])
        try:
            prev_close = t.fast_info.get("previous_close", None)
        except:
            prev_close = None
        change = (last_close - prev_close) if prev_close else None
        pct = (change/prev_close*100) if (prev_close and prev_close != 0) else None

        qcol1.metric("‡∏£‡∏≤‡∏Ñ‡∏≤ (Last Price)", f"{last_close:,.2f}")
        qcol2.metric("‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á / Œî", f"{(change if change is not None else 0):+.2f}" if change is not None else "‚Äî")
        qcol3.metric("%‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á", f"{(pct if pct is not None else 0):+.2f}%" if pct is not None else "‚Äî")
        try:
            info = t.fast_info
            vol = info.get("last_volume", None)
        except:
            vol = None
        qcol4.metric("‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì (Volume)", f"{vol:,}" if vol else "‚Äî")

st.markdown("---")

# -------- ‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô (Candlestick) --------
hist = t.history(start=pd.to_datetime(start), end=pd.to_datetime(end) + pd.Timedelta(days=1), interval="1d")
if hist.empty:
    st.warning("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")
else:
    fig = go.Figure(data=[go.Candlestick(
        x=hist.index,
        open=hist["Open"], high=hist["High"],
        low=hist["Low"], close=hist["Close"],
        name="Price"
    )])
    fig.update_layout(
        height=520,
        margin=dict(l=10, r=10, t=40, b=10),
        paper_bgcolor="#0B0E11",
        plot_bgcolor="#0B0E11",
        font=dict(color="#EAECEF"),
        xaxis=dict(gridcolor="#1F2A37"),
        yaxis=dict(gridcolor="#1F2A37"),
        title=f"Candlestick: {ticker}"
    )
    st.plotly_chart(fig, use_container_width=True)

    # ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    csv = hist.reset_index().to_csv(index=False).encode("utf-8")
    st.download_button("‚¨áÔ∏è ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (CSV) / Download CSV", data=csv, file_name=f"{ticker}_history.csv")

st.markdown("---")
# ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Education / Home (‡πÉ‡∏ä‡πâ page_link ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
try:
    l, r = st.columns(2)
    with l:
        st.page_link("pages/2_üìö_Education.py", label="üìö ‡πÑ‡∏õ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏´‡∏∏‡πâ‡∏ô ‚Äì Go to Education")
    with r:
        st.page_link("Home.py", label="üè† ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å ‚Äì Back to Home")
except Exception:
    st.info("‡πÉ‡∏ä‡πâ Sidebar ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ (‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î Streamlit ‚â• 1.31 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå)")
