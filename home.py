import streamlit as st
import yfinance as yf
import pandas as pd

st.set_page_config(page_title="‡∏ï‡∏•‡∏≤‡∏î‡∏´‡∏∏‡πâ‡∏ô ‚Ä¢ Market Overview", page_icon="üíπ", layout="wide")

# ---------- CSS ----------
st.markdown("""
<style>
:root {
  --lux-gold: #D4AF37;
  --lux-green: #00C853;
  --bg-0: #0B0E11;
  --bg-1: #101418;
  --bg-2: #141922;
  --text-0: #EAECEF;
  --text-1: #B7BDC6;
  --card: #0E131A;
}
html, body, [data-testid="stAppViewContainer"] { background: var(--bg-0) !important; color: var(--text-0) !important; }
[data-testid="stHeader"] { background: transparent !important; }
section.main > div { padding-top: 1.2rem; }
.stButton > button, .stDownloadButton > button {
  background: linear-gradient(135deg, var(--lux-gold), #8A6E2F);
  color: #0A0A0A; border: 0; border-radius: 10px; font-weight: 700;
}
.block-container { padding-top: 1rem; }
div[data-testid="stMetricValue"] { color: var(--text-0); }
div[data-testid="stMetricDelta"] { font-weight: 700; }
.lux-card {
  background: linear-gradient(180deg, var(--bg-1), var(--bg-2));
  border: 1px solid #212734; border-radius: 16px; padding: 18px;
}
.lux-subtle { color: var(--text-1); font-size: 0.95rem; }
</style>
""", unsafe_allow_html=True)
# ---------- End CSS ----------

st.title("üíπ ‡∏ï‡∏•‡∏≤‡∏î‡∏´‡∏∏‡πâ‡∏ô | Market Overview")
st.caption("Dark ‚Ä¢ Luxury ‚Ä¢ Thai + English ‚Ä¢ Real data via Yahoo Finance")

st.write("**‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡∏´‡∏•‡∏±‡∏Å (Major Indices)**")
indices = {
    "S&P 500 (^GSPC)": "^GSPC",
    "NASDAQ (^IXIC)": "^IXIC",
    "Dow Jones (^DJI)": "^DJI",
    "SET Thailand (^SET)": "^SET",
}
cols = st.columns(len(indices))

def fetch_quote(ticker):
    t = yf.Ticker(ticker)
    info = t.fast_info if hasattr(t, "fast_info") else{}
    last = getattr(t, "history")(period="1d").tail(1)
    print = None
    if not last.empty:
        price = float(lasst["Close"].iloc[-1])
    prev_close = getattr(info, "previous_close",None) if isinstance(info, dict) else getattr(info, "previous_close", None)
    return price, prev_close

for (label, ticker), c in zip(indices.items(), cols):
    with c:
        price, prev = fetch_quote(ticker)
        if price is not None and prev:
            change = price - prev
            pct = (change/prev)*100 if prev else 0
            delta_str = f"{change:+.2f} ({pct:+.2f}%)"
            st.metric(label=label, value=f"{price:,.2f}", delta=delta_str)
        else:
            st.metric(label=label, value="‚Äî", delta="‚Äî")

st.markdown("---")

left, right = st.columns([2,1])
with left:
    st.subheader("‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏ß‡πá‡∏ö ‚Ä¢ About")
    st.markdown("""
- ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏™‡∏£‡∏∏‡∏õ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏ï‡∏•‡∏≤‡∏î‡∏´‡∏∏‡πâ‡∏ô, ‡∏î‡∏π‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏∏‡πâ‡∏ô‡∏£‡∏≤‡∏¢‡∏ï‡∏±‡∏ß, ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô  
- **Bilingual**: ‡πÑ‡∏ó‡∏¢ + English ‚Ä¢ **Theme**: Dark & Luxury ‚Ä¢ **Data**: Yahoo Finance (yfinance)
""")
with right:
    st.subheader("‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô ‚Ä¢ Navigate")
    # ‡πÉ‡∏ä‡πâ page_link (Streamlit 1.31+) ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ Sidebar
    try:
        st.page_link("pages/1_üìä_Stock_Data.py", label="üìä ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏∏‡πâ‡∏ô ‚Äì Stock Prices")
        st.page_link("pages/2_üìö_Education.py", label="üìö ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏´‡∏∏‡πâ‡∏ô ‚Äì Investing Basics")
    except Exception:
        st.info("‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏ô‡∏π Sidebar ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ (‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î Streamlit ‚â• 1.31 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå)")